<launch>
  <!-- Start the LIDAR node -->
  <node name="lidar_node" pkg="rplidar_ros" type="rplidarNode" output="screen">
    <param name="serial_port" type="string" value="/dev/ttyLidar"/>
    <param name="serial_baudrate" type="int" value="460800"/>
    <param name="frame_id" type="string" value="laser"/>
    <param name="scan_frequency" type="double" value="10"/>
    <param name="angle_compensate" type="bool" value="true"/>
  </node>

  <!-- Start the IMU node -->
  <node name="imu_node" pkg="myahrs_driver" type="myahrs_driver" output="screen">
    <param name="port" value="/dev/ttyAhrs" />
    <param name="frame_id" value="imu_link" />
    <param name="update_rate" type="int" value="100"/>
  </node>

  <!-- Publish static transforms -->
  <node pkg="tf" type="static_transform_publisher" name="base_to_laser" 
    args="0 0 0 0 0 0 base_link laser 100" />
  <node pkg="tf" type="static_transform_publisher" name="base_to_imu" 
    args="0 0 0 0 0 0 base_link imu_link 100" />
  
  <!-- Publish odom to base_link transform -->
  <node pkg="tf" type="static_transform_publisher" name="odom_to_base_link" 
    args="0 0 0 0 0 0 odom base_link 100" />

  <!-- Run robot_localization for sensor fusion -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization" output="screen">
    <rosparam command="load" file="$(find my_robot_slam)/config/ekf_params.yaml" />
  </node>

  <!-- Run gmapping with optimized parameters -->
  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
    <param name="base_frame" value="base_link"/>
    <param name="odom_frame" value="odom"/>
    <param name="map_frame" value="map"/>
    <param name="scan" value="/scan"/>
    <param name="map_update_interval" value="1.3"/>
    <param name="maxUrange" value="16.0"/>
    <param name="sigma" value="0.05"/>
    <param name="kernelSize" value="1"/>
    <param name="lstep" value="0.05"/>
    <param name="astep" value="0.05"/>
    <param name="iterations" value="5"/>
    <param name="lsigma" value="0.075"/>
    <param name="ogain" value="3.0"/>
    <param name="lskip" value="0"/>
    <param name="minimumScore" value="50"/>
    <param name="srr" value="0.1"/>
    <param name="srt" value="0.2"/>
    <param name="str" value="0.1"/>
    <param name="stt" value="0.2"/>
    <param name="linearUpdate" value="0.3"/>
    <param name="angularUpdate" value="0.2"/>
    <param name="temporalUpdate" value="0.5"/>
    <param name="resampleThreshold" value="0.5"/>
    <param name="particles" value="30"/>
    <param name="xmin" value="-10.0"/>
    <param name="ymin" value="-10.0"/>
    <param name="xmax" value="10.0"/>
    <param name="ymax" value="10.0"/>
    <param name="delta" value="0.05"/>
    <param name="llsamplerange" value="0.01"/>
    <param name="llsamplestep" value="0.01"/>
    <param name="lasamplerange" value="0.005"/>
    <param name="lasamplestep" value="0.005"/>
    <param name="transform_publish_period" value="0.05"/>
    <param name="occ_thresh" value="0.3"/>
    <param name="debug" value="true"/>
  </node>

  <!-- Run the move_base node for autonomous navigation -->
  <node pkg="move_base" type="move_base" name="move_base" output="screen">
    <param name="base_global_planner" value="navfn/NavfnROS"/>
    <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>
    <rosparam file="$(find my_robot_slam)/config/move_base_params.yaml" command="load"/>
  </node>

  <!-- Start move_base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base_for_adu" output="screen">
    <rosparam file="$(find my_robot_control)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find my_robot_control)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find my_robot_control)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find my_robot_control)/config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find my_robot_control)/config/base_local_planner_params.yaml" command="load" />
  </node>

  <!-- Start the Arduino communication node -->
  <node pkg="my_robot_control" type="arduino_communicator.py" name="arduino_communicator" output="screen"/>
</launch>
